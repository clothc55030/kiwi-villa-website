---
export interface Props {
  room: {
    id: string;
    name: string;
    nameEn: string;
    roomNumbers: string[];
    description: string;
    capacity: number;
    size: number;
    price: {
      min: number;
      max: number;
    };
    features: string[];
    facilities: string[];
    images: Array<{
      src: string;
      alt: string;
    }>;
    featured?: boolean;
    beds: Array<{
      type: string;
      size: string;
      count: number;
    }>;
  };
  index: number;
}

const { room, index } = Astro.props;

// 產生房間號碼的 ID（用於錨點導航）
const roomIds = room.roomNumbers.map(num => `room-${num.match(/\d+/)?.[0]}`);
---

<div 
  class={`bg-white rounded-lg shadow-lg transition-all duration-300 hover:shadow-xl hover:-translate-y-1 ${room.featured ? 'ring-2 ring-primary-500 ring-offset-4' : ''} room-card`}
  id={roomIds[0]}
  data-room-id={room.id}
  data-animation-index={index}
  tabindex="0"
  role="article"
  aria-label={`${room.name} - ${room.roomNumbers.join(', ')}`}
>
  {room.featured && (
    <div class="absolute -top-3 -right-3 z-10 bg-gradient-to-r from-red-500 to-red-600 text-white px-4 py-2 rounded-full font-medium text-sm shadow-lg">
      推薦
    </div>
  )}
  
  <!-- 圖片藝廊 -->
  <div class="relative overflow-hidden rounded-t-lg">
    <!-- 桌面版 -->
    <div class="hidden md:block">
      <div class="relative group h-[400px]">
        <!-- 主圖片 -->
        <img 
          src={room.images[0].src} 
          alt={room.images[0].alt}
          class="main-image w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
          loading="lazy"
        />
        
        <!-- 縮略圖導航 -->
        {room.images.length > 1 && (
          <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/50 to-transparent p-4">
            <div class="flex gap-2 overflow-x-auto scrollbar-hide">
              {room.images.slice(0, 5).map((image, i) => (
                <button
                  class="thumbnail relative w-16 h-16 rounded overflow-hidden border-2 border-transparent hover:border-white transition-all duration-300 flex-shrink-0 focus:border-white focus:outline-none"
                  data-index={i}
                  aria-label={`查看${room.name}第 ${i + 1} 張圖片`}
                  tabindex="0"
                >
                  <img 
                    src={image.src} 
                    alt={image.alt}
                    class="w-full h-full object-cover"
                    loading="lazy"
                  />
                </button>
              ))}
              {room.images.length > 5 && (
                <button
                  class="thumbnail flex items-center justify-center w-16 h-16 rounded bg-black/50 text-white text-sm flex-shrink-0 hover:bg-black/70 transition-all duration-300 cursor-pointer hover:scale-105 focus:outline-none focus:ring-2 focus:ring-white"
                  data-index="5"
                  aria-label={`查看剩餘的 ${room.images.length - 5} 張圖片`}
                  tabindex="0"
                  title="點擊查看更多圖片"
                >
                  +{room.images.length - 5}
                </button>
              )}
            </div>
          </div>
        )}
      </div>
    </div>
    
    <!-- 手機版滑動瀏覽 -->
    <div class="md:hidden">
      <div class="gallery-mobile relative">
        <div class="gallery-scroll flex overflow-x-auto snap-x snap-mandatory scrollbar-hide">
          {room.images.map((image, i) => (
            <div class="gallery-item flex-shrink-0 w-full snap-center">
              <img 
                src={image.src} 
                alt={image.alt}
                class="w-full h-[250px] object-cover"
                loading={i <= 1 ? "eager" : "lazy"}
                decoding={i === 0 ? "sync" : "async"}
              />
            </div>
          ))}
        </div>
        
        <!-- 指示器 -->
        {room.images.length > 1 && (
          <div class="absolute bottom-4 left-1/2 -translate-x-1/2 flex gap-1.5">
            {room.images.map((_, i) => (
              <button
                class={`indicator w-2 h-2 rounded-full bg-white/50 transition-all duration-300 ${i === 0 ? 'bg-white w-6' : ''}`}
                data-index={i}
                aria-label={`第 ${i + 1} 張圖片`}
              />
            ))}
          </div>
        )}
      </div>
    </div>
  </div>
  
  <!-- 房間內容 -->
  <div class="room-content p-6">
    <div class="room-header mb-4">
      <div class="flex items-start justify-between gap-4">
        <div>
          <div class="text-primary-600 font-semibold text-lg mb-1">
            {room.roomNumbers.join(' ')}
          </div>
          <h3 class="text-2xl font-display font-semibold text-gray-800 mb-1">
            {room.name}
          </h3>
          <p class="text-sm text-gray-500 italic">{room.nameEn}</p>
        </div>
        <div class="text-right">
          <div class="text-sm text-gray-500">價格區間</div>
          <div class="text-lg font-semibold text-primary-600">
            ${room.price.min.toLocaleString()}-{room.price.max.toLocaleString()}
          </div>
        </div>
      </div>
    </div>
    
    <!-- 特色標籤 -->
    <div class="flex flex-wrap gap-2 mb-4">
      {room.features.map(feature => (
        <span class="bg-secondary-50 text-secondary-700 px-3 py-1 rounded-full text-sm">
          {feature}
        </span>
      ))}
    </div>
    
    <!-- 房間設施 -->
    <div class="mb-6">
      <h4 class="text-lg font-semibold mb-3 text-gray-800">房間設施</h4>
      <ul class="space-y-2 text-gray-600">
        {room.facilities.map(facility => (
          <li class="flex items-start">
            <iconify-icon 
              icon="heroicons:check-circle" 
              class="text-primary-500 mt-0.5 mr-2 flex-shrink-0"
            ></iconify-icon>
            <span class="text-sm">{facility}</span>
          </li>
        ))}
      </ul>
    </div>
    
    <!-- 預訂按鈕 -->
    <a 
      href="https://booking.owlting.com/kiwi-villa" 
      class="btn-primary w-full flex items-center justify-center gap-2 py-3 px-6 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors duration-300 font-medium focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2"
      target="_blank"
      rel="noopener noreferrer"
      aria-label={`預訂${room.name}`}
    >
      <iconify-icon icon="heroicons:calendar"></iconify-icon>
      立即預訂
    </a>
  </div>
</div>

<!-- 為其他房間號碼添加隱藏錨點 -->
{roomIds.slice(1).map(id => (
  <div id={id} class="absolute invisible"></div>
))}

<style>
  /* 滾動條隱藏 */
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  
  /* 焦點樣式 */
  :global(.room-card:focus) {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
  
  /* 減少動作偏好 */
  @media (prefers-reduced-motion: reduce) {
    :global(.room-card) {
      transition: none;
    }
  }
</style>

<script>
  // 圖片藝廊互動功能
  document.addEventListener('DOMContentLoaded', () => {
    const roomCards = document.querySelectorAll('[data-room-id]');
    
    roomCards.forEach(card => {
      // 桌面版縮略圖切換
      const mainImage = card.querySelector('.main-image') as HTMLImageElement;
      const thumbnails = card.querySelectorAll('.thumbnail');
      const roomData = card.getAttribute('data-room-id');
      
      thumbnails.forEach((thumb, index) => {
        thumb.addEventListener('click', () => {
          const roomId = roomData;
          if (roomId && window.roomImages && window.roomImages[roomId]) {
            const images = window.roomImages[roomId];
            if (images && images[index] && mainImage) {
              mainImage.src = images[index].src;
              mainImage.alt = images[index].alt;
            }
          }
        });
      });
      
      // 手機版滑動處理
      const scrollContainer = card.querySelector('.gallery-scroll');
      const indicators = card.querySelectorAll('.indicator');
      
      if (scrollContainer && indicators.length > 0) {
        let currentIndex = 0;
        
        // 監聽滾動事件
        scrollContainer.addEventListener('scroll', () => {
          const scrollLeft = scrollContainer.scrollLeft;
          const itemWidth = scrollContainer.clientWidth;
          const newIndex = Math.round(scrollLeft / itemWidth);
          
          if (newIndex !== currentIndex) {
            currentIndex = newIndex;
            updateIndicators(indicators, currentIndex);
          }
        });
        
        // 點擊指示器
        indicators.forEach((indicator, index) => {
          indicator.addEventListener('click', () => {
            const itemWidth = scrollContainer.clientWidth;
            scrollContainer.scrollTo({
              left: index * itemWidth,
              behavior: 'smooth'
            });
          });
        });
      }
    });
    
    // 更新指示器狀態
    function updateIndicators(indicators: NodeListOf<Element>, activeIndex: number) {
      indicators.forEach((indicator, index) => {
        if (index === activeIndex) {
          indicator.classList.add('bg-white', 'w-6');
          indicator.classList.remove('bg-white/50');
        } else {
          indicator.classList.remove('bg-white', 'w-6');
          indicator.classList.add('bg-white/50');
        }
      });
    }
  });
</script>