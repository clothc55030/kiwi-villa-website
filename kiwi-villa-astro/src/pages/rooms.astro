---
import Layout from '../layouts/Layout.astro';
import RoomCard from '../components/RoomCard.astro';
import Lightbox from '../components/Lightbox.astro';
import RoomFeatureIcon from '../components/RoomFeatureIcon.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { contactInfo } from '../config/social';
import { Image } from 'astro:assets';
import ogImageSrc from '../assets/images/rooms/rooms-og.webp';

const bookingUrl = 'https://booking.owlting.com/kiwi-villa';

// 獲取所有房型資料
const rooms: CollectionEntry<'rooms'>[] = await getCollection('rooms');
// 按 sortOrder 排序
const sortedRooms = rooms.sort((a, b) => a.data.sortOrder - b.data.sortOrder);

// SEO 和 Meta 資料
const pageTitle = '房型設施 - 澎湖期遇度假會館 | 多種房型選擇，滿足不同需求';
const pageDescription = '澎湖期遇度假會館房型設施，提供豪華家庭房、高級四人房、奢華四人房、高級三人房、高級雙床房、高級雙人房等多種房型選擇。';
const pageKeywords = '澎湖期遇度假會館,房型設施,豪華家庭房,高級四人房,奢華四人房,民宿房型,澎湖住宿';
const canonicalURL = 'https://www.kiwi-villa.com/rooms';
const ogImage = ogImageSrc.src;

// 結構化資料
const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'LodgingBusiness',
  name: '澎湖期遇度假會館',
  description: pageDescription,
  url: 'https://www.kiwi-villa.com',
  telephone: contactInfo.phone,
  address: {
    '@type': 'PostalAddress',
    streetAddress: contactInfo.address,
    addressLocality: '馬公市',
    addressRegion: '澎湖縣',
    postalCode: '880',
    addressCountry: 'TW'
  },
  hasOfferCatalog: {
    '@type': 'OfferCatalog',
    name: '房型設施',
    itemListElement: sortedRooms.map((room, index) => ({
      '@type': 'HotelRoom',
      '@id': `https://www.kiwi-villa.com/rooms#${room.data.id}`,
      position: index + 1,
      name: room.data.name,
      description: room.data.description,
      occupancy: {
        '@type': 'QuantitativeValue',
        value: room.data.capacity,
        unitText: '人'
      },
      floorSize: {
        '@type': 'QuantitativeValue',
        value: room.data.size,
        unitText: '坪'
      },
      bed: room.data.beds.map(bed => ({
        '@type': 'BedDetails',
        typeOfBed: bed.type,
        quantity: bed.count
      })),
      amenityFeature: room.data.facilities.map((facility: string) => ({
        '@type': 'LocationFeatureSpecification',
        name: facility,
        value: true
      })),
      priceSpecification: {
        '@type': 'PriceSpecification',
        minPrice: room.data.price.min,
        maxPrice: room.data.price.max,
        priceCurrency: 'TWD'
      },
      image: room.data.images.map(img => ({
        '@type': 'ImageObject',
        url: new URL(img.src.src, Astro.url).href,
        name: img.alt
      }))
    }))
  }
};

// 所有房型的共同設施
const commonAmenities = [
  {
    icon: 'fa6-solid:bath',
    title: 'TOTO衛浴',
    description: '全套TOTO淋浴龍頭、洗臉臺、免治馬桶'
  },
  {
    icon: 'fa6-solid:snowflake',
    title: '大金冷氣',
    description: '隱藏式獨立冷氣，靜音冷房效能'
  },
  {
    icon: 'fa6-solid:droplet',
    title: '軟水系統',
    description: '全屋軟水淨水系統，RO逆滲透飲水'
  },
  {
    icon: 'fa6-solid:wifi',
    title: '高速網路',
    description: '500M頻寬，商用級Ubiquiti設備'
  }
];
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  keywords={pageKeywords}
  canonicalUrl={canonicalURL}
  ogImage={ogImage}
  currentPage="/rooms"
>
  <!-- 結構化資料 -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
  
  <!-- Hero Section -->
  <section class="relative min-h-[70vh] md:min-h-[80vh] flex items-center justify-center overflow-hidden animate-gradient-shift bg-gradient-hero">
    <!-- Content -->
    <div class="relative z-10 text-center text-white max-w-[600px] px-4 md:px-6 animate-fade-in-up">
      <h1 class="hero-title font-display text-[clamp(2.5rem,5vw,4rem)] font-semibold mb-4 text-shadow-lg">
        房型設施
      </h1>
      <p class="hero-subtitle text-[clamp(1.125rem,2.5vw,1.5rem)] font-light mb-6 text-shadow-md">
        多種房型選擇，滿足不同需求
      </p>
      <div class="max-w-[600px] mx-auto">
        <p class="text-[1.1rem] mb-2 text-shadow-md">
          舒適雅緻的住宿空間，享受澎湖的悠閒時光
        </p>
        <p class="text-[1.1rem] text-shadow-md">
          每個房型都經過精心設計，提供您最完善的設施
        </p>
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <main class="bg-white">
    <!-- 房型導覽 -->
    <section class="sticky top-20 z-40 bg-white/95 border-b border-gray-200 py-4 backdrop-blur-sm">
      <div class="container mx-auto px-4">
        <nav 
          class="room-nav-container flex gap-2 md:gap-4 overflow-x-auto pb-2 scrollbar-hide"
          role="navigation"
          aria-label="房型導覽"
        >
          {sortedRooms.map((room) => (
            <button
              data-room-nav={room.data.id}
              class="room-nav-btn flex-shrink-0 px-4 py-2 rounded-full text-sm font-medium text-gray-600 transition-all duration-300 whitespace-nowrap focus:ring-2 focus:outline-none"
              aria-label={`查看${room.data.name}，價格${room.data.price.min}-${room.data.price.max}元`}
            >
              <span class="block">{room.data.name}</span>
              <span class="text-xs text-gray-500 mt-0.5">
                NT$ {room.data.price.min.toLocaleString()}-{room.data.price.max.toLocaleString()}
              </span>
            </button>
          ))}
        </nav>
        <!-- 手機版拖曳提示 -->
        <div class="md:hidden text-center text-xs text-gray-400 mt-1">
          ← 滑動查看更多房型 →
        </div>
      </div>
    </section>

    <!-- 房型展示區 -->
    <section class="py-16 md:py-20">
      <div class="space-y-32">
        {sortedRooms.map((room, index) => (
          <article 
            id={`room-${room.data.id}`} 
            class="room-section"
            data-room-id={room.data.id}
            data-animation-index={index}
          >
            <div class="container mx-auto px-4">
              <div class={`grid lg:grid-cols-2 gap-8 lg:gap-16 items-center ${index % 2 === 1 ? 'lg:grid-flow-col-dense' : ''}`}>
                <!-- 圖片區 -->
                <div class={`room-images ${index % 2 === 1 ? 'lg:col-start-2' : ''}`}>
                  <div class="relative aspect-[4/3] rounded-2xl overflow-hidden shadow-2xl">
                    <Image 
                      src={room.data.images[0].src}
                      alt={room.data.images[0].alt}
                      class="w-full h-full object-cover"
                      loading="lazy"
                      widths={[400, 800]}
                      sizes="(max-width: 1023px) 90vw, 45vw"
                      quality={80}
                    />
                    <button 
                      class="absolute inset-0 bg-black/20 hover:bg-black/40 transition-colors duration-300 flex items-center justify-center group focus:outline-none focus:ring-2 focus:ring-primary-500"
                      data-room-gallery={room.data.id}
                      aria-label={`查看${room.data.name}的所有照片，共${room.data.images.length}張`}
                    >
                      <div class="bg-white/90 rounded-lg px-6 py-3 flex items-center gap-2 group-hover-scale-105 transition-transform duration-300 backdrop-blur-sm">
                        <iconify-icon icon="heroicons:photo" class="text-xl"></iconify-icon>
                        <span class="font-medium">查看所有照片</span>
                      </div>
                    </button>
                  </div>
                  <!-- 小圖預覽 -->
                  <div class="grid grid-cols-4 gap-2 mt-4">
                    {room.data.images.slice(1, 5).map((img, imgIndex) => (
                      <button 
                        class="aspect-square rounded-lg overflow-hidden hover:opacity-80 transition-opacity duration-300"
                        data-room-gallery={room.data.id}
                        data-image-index={String(imgIndex + 1)}
                      >
                        <Image 
                          src={img.src}
                          alt={img.alt}
                          class="w-full h-full object-cover"
                          loading="lazy"
                          width={200}
                          height={200}
                          quality="low"
                        />
                      </button>
                    ))}
                  </div>
                </div>

                <!-- 資訊區 -->
                <div class={`room-info space-y-6 ${index % 2 === 1 ? 'lg:col-start-1' : ''}`}>
                  <div>
                    <h2 class="text-3xl md:text-4xl font-display font-bold text-gray-800 mb-2">
                      {room.data.name}
                    </h2>
                    <p class="text-lg text-gray-600 mb-2">{room.data.nameEn}</p>
                    <div class="flex items-center gap-2">
                      <iconify-icon icon="heroicons:home" class="text-primary-600"></iconify-icon>
                      <span class="font-medium text-primary-700">房號：{room.data.roomNumbers.join('、')}</span>
                    </div>
                  </div>

                  <div class="flex flex-wrap gap-3">
                    {room.data.features && room.data.features.map((feature: string) => (
                      <span class="px-4 py-2 rounded-full text-sm font-medium bg-primary-50 text-primary-700">
                        {feature}
                      </span>
                    ))}
                  </div>

                  <p class="text-gray-700 leading-relaxed">
                    {room.data.description}
                  </p>

                  <!-- 房型特色 -->
                  <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                    <RoomFeatureIcon 
                      icon="heroicons:users" 
                      label="可住人數" 
                      value={`${room.data.capacity}人`} 
                    />
                    <RoomFeatureIcon 
                      icon="heroicons:squares-2x2" 
                      label="房間大小" 
                      value={`${room.data.size}坪`} 
                    />
                    <RoomFeatureIcon 
                      icon="fa6-solid:bed" 
                      label="床型" 
                      value={room.data.beds[0].type} 
                    />
                  </div>

                  <!-- 房間設施 -->
                  <div>
                    <h3 class="text-lg font-semibold mb-3">房間設施</h3>
                    <div class="grid grid-cols-2 gap-2">
                      {room.data.facilities && room.data.facilities.slice(0, 6).map((facility: string) => (
                        <div class="flex items-center gap-2 text-gray-600">
                          <iconify-icon icon="heroicons:check-circle" class="text-primary-500"></iconify-icon>
                          <span class="text-sm">{facility}</span>
                        </div>
                      ))}
                    </div>
                  </div>

                  <!-- 預訂按鈕 -->
                  <div class="pt-6 border-t border-gray-200">
                    <a 
                      href={bookingUrl}
                      class="btn-primary inline-flex items-center gap-2 px-8 py-3 rounded-lg font-medium w-full justify-center"
                      target="_blank"
                      rel="noopener noreferrer"
                      aria-label={`預訂${room.data.name}`}
                    >
                      <iconify-icon icon="heroicons:calendar"></iconify-icon>
                      查看房價與預訂
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </article>
        ))}
      </div>
    </section>

    <!-- 共用設施區 -->
    <section class="py-20 bg-gradient-to-b from-gray-50 to-white">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="amenities-title text-3xl md:text-4xl font-display font-bold text-gray-800 mb-4">
            全館共同設施
          </h2>
          <p class="text-lg text-gray-600 max-w-2xl mx-auto">
            我們提供完善的設施，讓您的住宿體驗更加舒適愉快
          </p>
        </div>

        <!-- 設施卡片網格 -->
        <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
          {commonAmenities.map((amenity, index) => (
            <div 
              class="amenity-card group bg-white rounded-xl p-6 transition-all duration-300 hover:-translate-y-1 shadow-lg"
              data-animation-index={index}
            >
              <div class="w-16 h-16 mb-4 rounded-xl flex items-center justify-center group-hover-scale-110 transition-transform duration-300 bg-gradient-to-br from-primary-100 to-primary-200">
                <iconify-icon icon={amenity.icon} class="text-2xl text-primary-600"></iconify-icon>
              </div>
              <h3 class="text-xl font-semibold mb-2 text-gray-800">{amenity.title}</h3>
              <p class="text-gray-600 text-sm leading-relaxed">{amenity.description}</p>
            </div>
          ))}
        </div>

        <!-- 額外設施列表 -->
        <div class="mt-16 bg-white rounded-2xl p-8 shadow-lg">
          <h3 class="text-2xl font-semibold mb-6 text-center">其他貼心服務</h3>
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
            {[
              '免費停車位',
              '行李寄存服務',
              '旅遊諮詢服務',
              '機車租借代訂',
              '早餐供應',
              '洗衣及烘乾設備',
              '公共休息區',
              '戶外陽台空間',
              '24小時前台服務'
            ].map((service: string) => (
              <div class="flex items-center gap-2">
                <iconify-icon icon="heroicons:check-badge" class="text-xl text-primary-500"></iconify-icon>
                <span class="text-gray-700">{service}</span>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>

    <!-- CTA Section - 重新設計 -->
    <section class="relative py-24 overflow-hidden">
      <!-- 背景漸層 -->
      <div class="absolute inset-0 bg-gradient-to-br from-primary-600 via-primary-700 to-secondary-700"></div>
      
      <!-- 裝飾圖案 -->
      <div class="absolute inset-0 opacity-10">
        <div class="absolute top-0 left-0 w-96 h-96 bg-white rounded-full -translate-x-1/2 -translate-y-1/2"></div>
        <div class="absolute bottom-0 right-0 w-[30rem] h-[30rem] bg-white rounded-full translate-x-1/2 translate-y-1/2"></div>
      </div>
      
      <!-- 內容 -->
      <div class="relative z-10 container mx-auto px-4">
        <div class="max-w-3xl mx-auto text-center text-white">
          <h2 class="cta-title text-4xl md:text-5xl font-display font-bold mb-6 text-shadow-lg">
            準備好您的澎湖之旅了嗎？
          </h2>
          <p class="cta-subtitle text-xl md:text-2xl mb-12 text-white/90 text-shadow-md">
            選擇您喜愛的房型，享受難忘的海島假期
          </p>
          
          <div class="cta-buttons flex flex-col sm:flex-row gap-4 justify-center">
            <a 
              href={bookingUrl}
              class="btn-cta-primary group inline-flex items-center justify-center gap-3 px-8 py-4 rounded-xl font-semibold text-lg"
              target="_blank"
              rel="noopener noreferrer"
            >
              <iconify-icon icon="heroicons:calendar" class="text-2xl transition-transform duration-300 group-hover-scale-110"></iconify-icon>
              立即預訂房間
            </a>
            <a 
              href={`tel:${contactInfo.phone}`}
              class="btn-cta-secondary group inline-flex items-center justify-center gap-3 px-8 py-4 rounded-xl font-semibold text-lg"
            >
              <iconify-icon icon="heroicons:phone" class="text-2xl transition-transform duration-300 group-hover-scale-110"></iconify-icon>
              電話諮詢
            </a>
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- Lightbox -->
  <Lightbox />
  
  <!-- 回到頂部按鈕 -->
  <button 
    id="back-to-top" 
    class="fixed bottom-8 right-8 w-12 h-12 text-white rounded-full transition-all duration-300 opacity-0 invisible focus:outline-none focus:ring-2 z-50 bg-primary-600 shadow-lg ring-primary-500"
    aria-label="回到頂部"
  >
    <iconify-icon icon="heroicons:chevron-up" class="text-2xl"></iconify-icon>
  </button>
</Layout>

<!-- 懶載入房間圖片資料 -->
<script>
  const lazyImageLoader = {
    loaded: new Set<string>(),
    async loadRoomImages(roomId: string): Promise<RoomImage[]> {
      if (this.loaded.has(roomId) || (window.roomImages && window.roomImages[roomId])) {
        return window.roomImages[roomId];
      }
      
      if (!window.roomImagesData) {
        window.roomImagesData = {};
      }
      
      this.loaded.add(roomId);
      return (window.roomImagesData[roomId] || []).map((img: any) => ({
        src: img.src.src,
        alt: img.alt,
        width: img.src.width,
        height: img.src.height,
      }));
    }
  };
  
  window.lazyImageLoader = lazyImageLoader;
</script>

<!-- 初始化房間圖片資料 -->
<script define:vars={{ sortedRooms }}>
  window.roomImages = {};
  window.roomImagesData = {};
  
  sortedRooms.slice(0, 2).forEach(room => {
    window.roomImages[room.data.id] = room.data.images;
    window.roomImagesData[room.data.id] = room.data.images;
  });
  
  sortedRooms.slice(2).forEach(room => {
    window.roomImagesData[room.data.id] = room.data.images;
  });
</script>

<!-- 房間導航和高亮功能 -->
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const backToTopBtn = document.getElementById('back-to-top') as HTMLButtonElement | null;
    if (backToTopBtn) {
      const toggleBackToTop = () => {
        if (window.scrollY > 300) {
          backToTopBtn.classList.remove('opacity-0', 'invisible');
          backToTopBtn.classList.add('opacity-100', 'visible');
        } else {
          backToTopBtn.classList.remove('opacity-100', 'visible');
          backToTopBtn.classList.add('opacity-0', 'invisible');
        }
      };
      
      window.addEventListener('scroll', toggleBackToTop, { passive: true });
      
      backToTopBtn.addEventListener('click', () => {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });
    }
    
    const navButtons = document.querySelectorAll<HTMLButtonElement>('[data-room-nav]');
    const roomSections = document.querySelectorAll<HTMLElement>('.room-section');
    
    navButtons.forEach(button => {
      button.addEventListener('click', () => {
        const roomId = button.getAttribute('data-room-nav');
        if (!roomId) return;
        
        const targetSection = document.getElementById(`room-${roomId}`) as HTMLElement | null;
        if (targetSection) {
          const stickyNavHeight = 144;
          const targetPosition = targetSection.offsetTop - stickyNavHeight;
          
          window.scrollTo({
            top: targetPosition,
            behavior: 'smooth'
          });
        }
      });
    });
    
    const updateActiveButton = () => {
      const scrollY = window.scrollY;
      const stickyNavHeight = 144;
      
      roomSections.forEach(section => {
        const sectionTop = section.offsetTop - stickyNavHeight - 100;
        const sectionBottom = sectionTop + section.offsetHeight;
        
        if (scrollY >= sectionTop && scrollY < sectionBottom) {
          const roomId = section.getAttribute('data-room-id');
          navButtons.forEach(btn => {
            const isTarget = btn.getAttribute('data-room-nav') === roomId;
            btn.classList.toggle('bg-primary-100', isTarget);
            btn.classList.toggle('text-primary-700', isTarget);
            btn.classList.toggle('font-semibold', isTarget);
            btn.classList.toggle('text-gray-600', !isTarget);
          });
        }
      });
    };
    
    let ticking = false;
    const scrollHandler = () => {
      if (!ticking) {
        window.requestAnimationFrame(() => {
          updateActiveButton();
          ticking = false;
        });
        ticking = true;
      }
    };
    
    window.addEventListener('scroll', scrollHandler, { passive: true });
    
    const galleryButtons = document.querySelectorAll<HTMLButtonElement>('[data-room-gallery]');
    
    galleryButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const roomId = button.getAttribute('data-room-gallery');
        const imageIndex = button.getAttribute('data-image-index') || '0';
        
        if (roomId && !window.roomImages[roomId] && window.roomImagesData[roomId]) {
          window.roomImages[roomId] = window.roomImagesData[roomId];
        }
        
        if (roomId && window.openLightbox && window.roomImages[roomId]) {
          const lightboxImages = window.roomImages[roomId].map((img: any) => ({
            src: img.src.src,
            alt: img.alt,
            width: img.src.width,
            height: img.src.height
          }));
          window.openLightbox(lightboxImages, parseInt(imageIndex));
        }
      });
    });
    
    const urlParams = new URLSearchParams(window.location.search);
    const gotoRoom = urlParams.get('goto');
    const hashRoom = window.location.hash.slice(1);
    
    let targetId = '';
    
    if (gotoRoom) {
      targetId = `room-${gotoRoom}`;
    } else if (hashRoom) {
      targetId = hashRoom;
    }
    
    if (targetId) {
      if (targetId === 'room-302') {
        targetId = 'room-301';
      } else if (targetId === 'room-306' || targetId === 'room-307') {
        targetId = 'room-305';
      }
      
      setTimeout(() => {
        const targetElement = document.getElementById(targetId) as HTMLElement | null;
        if (targetElement) {
          const stickyNavHeight = 144;
          const elementTop = targetElement.offsetTop;
          const scrollTo = elementTop - stickyNavHeight;
          
          window.scrollTo({
            top: scrollTo,
            behavior: 'smooth'
          });
          
          setTimeout(updateActiveButton, 100);
        }
      }, 500);
    }
  });
</script>

<!-- Motion One 動畫 -->
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const roomSections = document.querySelectorAll<HTMLElement>('.room-section');
    roomSections.forEach(section => {
      section.style.opacity = '1';
    });
    
    const otherElements = document.querySelectorAll<HTMLElement>('.hero-title, .hero-subtitle, .amenities-title, .amenity-card, .cta-title, .cta-subtitle, .cta-buttons');
    otherElements.forEach(el => {
      if (!el.style.opacity) {
        el.style.opacity = '1';
      }
    });
  });
  
  window.addEventListener('load', async () => {
    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    
    if (prefersReducedMotion) {
      const allElements = document.querySelectorAll<HTMLElement>('.hero-title, .hero-subtitle, .amenities-title, .amenity-card, .room-section, .cta-title, .cta-subtitle, .cta-buttons');
      allElements.forEach(el => {
        el.style.opacity = '1';
        el.style.transform = '';
      });
      return;
    }
    
    try {
      const { animate, stagger } = await import('motion');
      
      if (import.meta.env.DEV) {
        console.info('Motion One loaded successfully');
      }
      
      const animatedElements = document.querySelectorAll<HTMLElement>('.hero-title, .hero-subtitle, .amenities-title, .amenity-card, .cta-title, .cta-subtitle, .cta-buttons');
      animatedElements.forEach(el => {
        el.style.opacity = '0';
      });
      
      const heroTitle = document.querySelector<HTMLElement>('.hero-title');
      if (heroTitle) {
        heroTitle.style.opacity = '0';
        animate(heroTitle, 
          { opacity: [0, 1], y: [20, 0] }, 
          { duration: 0.6, easing: 'ease-out' }
        );
      }
      
      const heroSubtitle = document.querySelector<HTMLElement>('.hero-subtitle');
      if (heroSubtitle) {
        heroSubtitle.style.opacity = '0';
        animate(heroSubtitle, 
          { opacity: [0, 1], y: [20, 0] }, 
          { duration: 0.6, delay: 0.2, easing: 'ease-out' }
        );
      }
      
      const roomSections = document.querySelectorAll<HTMLElement>('.room-section');
      if (roomSections.length > 0) {
        const sectionObserver = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              const section = entry.target as HTMLElement;
              const images = section.querySelector<HTMLElement>('.room-images');
              const info = section.querySelector<HTMLElement>('.room-info');
              
              const isMobile = window.innerWidth < 768;
              const animDistance = isMobile ? 20 : 50;
              const animDuration = isMobile ? 0.5 : 0.8;
              
              if (images) {
                animate(images,
                  { opacity: [0, 1], x: [-animDistance, 0] },
                  { duration: animDuration, easing: 'ease-out' }
                );
              }
              
              if (info) {
                animate(info,
                  { opacity: [0, 1], x: [animDistance, 0] },
                  { duration: animDuration, delay: isMobile ? 0.1 : 0.2, easing: 'ease-out' }
                );
              }
              
              sectionObserver.unobserve(section);
            }
          });
        }, { rootMargin: '0px 0px -50px 0px', threshold: 0.1 });
        
        roomSections.forEach(section => {
          const images = section.querySelector<HTMLElement>('.room-images');
          const info = section.querySelector<HTMLElement>('.room-info');
          if (images) images.style.opacity = '0';
          if (info) info.style.opacity = '0';
          
          sectionObserver.observe(section);
        });
      }
      
      const amenitiesTitle = document.querySelector<HTMLElement>('.amenities-title');
      if (amenitiesTitle) {
        const titleObserver = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              animate(amenitiesTitle, 
                { opacity: [0, 1], y: [30, 0] }, 
                { duration: 0.6, easing: 'ease-out' }
              );
              titleObserver.unobserve(amenitiesTitle);
            }
          });
        });
        titleObserver.observe(amenitiesTitle);
      }
      
      const amenityCards = document.querySelectorAll<HTMLElement>('.amenity-card');
      if (amenityCards.length > 0) {
        const cardObserver = new IntersectionObserver((entries) => {
          const visibleCards = entries.filter(entry => entry.isIntersecting).map(entry => entry.target as HTMLElement);
          
          if (visibleCards.length > 0) {
            animate(visibleCards,
              { opacity: [0, 1], y: [30, 0] },
              { duration: 0.5, delay: stagger(0.1), easing: 'ease-out' }
            );
            
            visibleCards.forEach(card => cardObserver.unobserve(card));
          }
        }, { rootMargin: '0px 0px -100px 0px', threshold: 0.1 });
        
        amenityCards.forEach(card => {
          cardObserver.observe(card);
        });
      }
      
      const ctaElements = [
        { el: document.querySelector<HTMLElement>('.cta-title'), animation: { opacity: [0, 1], scale: [0.9, 1] }, delay: 0 },
        { el: document.querySelector<HTMLElement>('.cta-subtitle'), animation: { opacity: [0, 1], y: [20, 0] }, delay: 0.2 },
        { el: document.querySelector<HTMLElement>('.cta-buttons'), animation: { opacity: [0, 1], y: [20, 0] }, delay: 0.4 }
      ];
      
      const ctaObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const config = ctaElements.find(item => item.el === entry.target);
            if (config && config.el) {
              animate(config.el, config.animation, {
                duration: 0.6,
                delay: config.delay,
                easing: 'ease-out'
              });
              ctaObserver.unobserve(entry.target);
            }
          }
        });
      });
      
      ctaElements.forEach(({ el }) => {
        if (el) ctaObserver.observe(el);
      });
    } catch (error) {
      console.error('Motion One 載入失敗:', error);
      const allElements = document.querySelectorAll<HTMLElement>('.hero-title, .hero-subtitle, .amenities-title, .amenity-card, .room-section, .cta-title, .cta-subtitle, .cta-buttons');
      allElements.forEach(el => {
        el.style.opacity = '1';
        el.style.transform = '';
      });
    }
  });
</script>

<style>
  /* Hero 背景漸層 */
  :global(.bg-gradient-hero) {
    background: linear-gradient(135deg, #7c9bb5 0%, #9bb0c4 25%, #b8c7d6 50%, #a8b8c8 75%, #8fa3b3 100%);
    background-size: 400% 400%;
  }
  
  /* 房型導覽按鈕樣式 */
  :global(.room-nav-btn:hover) {
    color: var(--color-primary-600);
    background-color: var(--color-primary-50);
  }
  
  :global(.room-nav-btn:focus) {
    --tw-ring-color: var(--color-primary-500);
  }
  
  /* 回到頂部按鈕 */
  :global(#back-to-top:hover) {
    background-color: var(--color-primary-700);
    transform: scale(1.1);
  }
  
  :global(#back-to-top:focus) {
    --tw-ring-color: var(--ring-color);
  }
  
  /* 設施卡片 hover 效果 */
  :global(.amenity-card:hover) {
    box-shadow: var(--shadow-xl);
  }
  
  /* Scale hover 效果 */
  :global(.group:hover .group-hover-scale-105) {
    transform: scale(1.05);
  }
  
  :global(.group:hover .group-hover-scale-110) {
    transform: scale(1.1);
  }
  
  /* 統一 CTA 按鈕樣式 */
  :global(.btn-primary) {
    background-color: var(--color-primary-600);
    color: var(--color-white);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }
  
  :global(.btn-primary:hover) {
    background-color: var(--color-primary-700);
    box-shadow: var(--shadow-xl);
    transform: translateY(var(--translate-y-0-5));
  }
  
  :global(.btn-cta-primary) {
    background-color: var(--color-white);
    color: var(--color-primary-700);
    box-shadow: var(--shadow-xl);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }
  
  :global(.btn-cta-primary:hover) {
    background-color: var(--color-gray-50);
    box-shadow: var(--shadow-2xl);
    transform: translateY(var(--translate-y-1));
  }
  
  :global(.btn-cta-secondary) {
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--color-white);
    border: 2px solid rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }
  
  :global(.btn-cta-secondary:hover) {
    background-color: rgba(255, 255, 255, 0.2);
  }
  
  /* 隱藏水平捲軸 */
  :global(.scrollbar-hide) {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  /* Webkit scrollbar */
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  
  /* 初始化隱藏元素（Motion One 會處理顯示） */
  :global(.js .hero-title),
  :global(.js .hero-subtitle),
  :global(.js .amenities-title),
  :global(.js .amenity-card),
  :global(.js .cta-title),
  :global(.js .cta-subtitle),
  :global(.js .cta-buttons) {
    opacity: 0;
  }
  
  /* room-section 使用不同的策略，確保始終可見 */
  :global(.js .room-section) {
    opacity: 1;
  }
  
  /* No-JS 降級方案 - 確保沒有 JavaScript 時內容可見 */
  :global(.no-js .hero-title),
  :global(.no-js .hero-subtitle),
  :global(.no-js .amenities-title),
  :global(.no-js .amenity-card),
  :global(.no-js .room-section),
  :global(.no-js .cta-title),
  :global(.no-js .cta-subtitle),
  :global(.no-js .cta-buttons) {
    opacity: 1;
  }
  
  /* 動畫性能優化 */
  :global(.hero-title),
  :global(.hero-subtitle),
  :global(.amenities-title),
  :global(.amenity-card),
  :global(.room-images),
  :global(.room-info),
  :global(.cta-title),
  :global(.cta-subtitle),
  :global(.cta-buttons) {
    will-change: opacity, transform;
  }
  
  /* 動畫完成後移除 will-change */
  :global(.animation-complete) {
    will-change: auto;
  }
  
  /* 減少動畫效果 */
  @media (prefers-reduced-motion: reduce) {
    :global(.hero-title),
    :global(.hero-subtitle),
    :global(.amenities-title),
    :global(.amenity-card),
    :global(.room-section),
    :global(.cta-title),
    :global(.cta-subtitle),
    :global(.cta-buttons) {
      opacity: 1;
      animation: none;
      transition: none;
    }
  }
</style>